name: Build and Deploy Hugo Site

on:
  push:
    branches:
      - hugo

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install obsidian-export
        run: |
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/zoni/obsidian-export/releases/download/v25.3.0/obsidian-export-installer.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # 步骤 3: 运行 obsidian-export 进行转换
      # --frontmatter=delete: 防止 frontmatter 重复
      # --no-recursive-embeds: 避免无限循环嵌入
      # --no-obsidian-header: 不在输出文件中添加 obsidian url 头
      - name: Export Obsidian vault to Hugo content
        run: |
          # 创建 Hugo 内容目录（如果不存在）
          mkdir -p tianyi_site/content/posts
          # 运行导出命令
          obsidian-export \
            --frontmatter=auto \
            --no-recursive-embeds \
            vaults/blog \
            tianyi_site/content/posts

      # 步骤 4: 安装 Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest' # 使用最新版 Hugo
      
      - name: hugo mod tidy
        run: hugo mod tidy --source tianyi_site

      # 步骤 5: 构建 Hugo 站点
      # --source 指定 hugo 项目的根目录
      - name: Build Hugo site
        run: hugo --source tianyi_site --destination hugo_site/public

      # 步骤 6: 部署到 GitHub Pages
      # 将 hugo_site/public 目录下的内容推送到 gh-pages 分支
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          # GITHUB_TOKEN 是由 Actions 自动生成的，有权限推送到本仓库
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Hugo 生成的静态文件默认放在 public 目录
          publish_dir: ./hugo_site/public
          # 部署到 gh-pages 分支，这是 GitHub Pages 的标准实践
          publish_branch: gh-pages